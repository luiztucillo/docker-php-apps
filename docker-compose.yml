version: '3.8'
services:
    nginx:
        build:
            context: images/nginx
            args:
                username: ${USERNAME}
                domain: ${DOMAIN}
        container_name: wordpress_nginx
        ports:
            - 80:80
            - 443:443
        links:
            - php
        volumes:
            - ./src:/var/www/html
            - ./plugins:/var/www/html/wp-content/plugins
            - ./images/nginx/conf/ssl/:/etc/nginx/ssl/
            - ./images/nginx/conf/conf.d/default.conf:/etc/nginx/conf.d/default.conf
            - ./images/nginx/conf/applications/wordpress.conf:/etc/nginx/application.conf
            - ./images/nginx/conf/includes:/etc/nginx/includes
        networks:
            mynetwork:
                aliases:
                    - ${DOMAIN}

    php:
        build:
            context: images/php
            dockerfile: Dockerfile-7.4
            args:
                username: ${USERNAME}
                host_os: ${HOST_OS}
        container_name: wordpress_php
        links:
            - mysql
        volumes:
          - ./src:/var/www/html
          - ./plugins:/var/www/html/wp-content/plugins
          - /private:/private #/tmp dir for mac
        networks:
            - mynetwork
        environment:
            - WP_CORE_DIR=/var/www/html
            - WP_TESTS_DIR=/var/www/html/tests
            - PHP_IDE_CONFIG="serverName=Docker"

    mysql:
        image: mysql:5.7
        container_name: wordpress_mysql
        ports:
            - 3306:3306
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        volumes:
          - ./data:/var/lib/mysql:delegated
        networks:
            - mynetwork

    mailhog:
        image: mailhog/mailhog
        container_name: wordpress_mailhog
        ports:
            - 1025:1025
            - 8025:8025
        networks:
            - mynetwork

networks:
    mynetwork:
        driver: bridge
