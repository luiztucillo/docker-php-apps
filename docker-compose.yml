version: '2'
services:
  nginx:
    build:
      context: images/nginx
      args:
        username: ${USERNAME}
        domain: ${DOMAIN}
    container_name: ${APPLICATION}_nginx
    ports:
      - 80:80
      - 443:443
    links:
      - php
    volumes:
      - ${HOST_APP_PATH}:/var/www/html:delegated
      - ./data/log:/var/log/nginx:delegated
      - ./images/nginx/conf/ssl/:/etc/nginx/ssl/
      - ./images/nginx/conf/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./images/nginx/conf/applications/${APPLICATION}.conf:/etc/nginx/application.conf
      - ./images/nginx/conf/includes:/etc/nginx/includes
    networks:
      mynetwork:
        aliases:
          - ${DOMAIN}

  php:
    build:
      context: images/php
      dockerfile: Dockerfile-${PHP_VERSION}
      args:
        username: ${USERNAME}
        host_os: ${HOST_OS}
    container_name: ${APPLICATION}_php
    links:
      - mysql
      - redis
    volumes:
      - ${HOST_APP_PATH}:/var/www/html:delegated
      - /private:/private:delegated #/tmp dir for mac
      - ./data/log:/var/log/php-fpm:delegated
      - ./data/log/xdebug:/var/log/xdebug:delegated
      - ./data/composer/auth.json:/home/${USERNAME}/.composer/auth.json:delegated
      - ./data/composer/cache:/home/${USERNAME}/.composer/cache:delegated
    networks:
      - mynetwork
    environment:
      - WP_CORE_DIR=/var/www/html
      - WP_TESTS_DIR=/var/www/html/tests
      - PHP_IDE_CONFIG="serverName=Docker"

  mysql:
    image: mysql:5.7
    restart: always
    container_name: ${APPLICATION}_mysql
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ${DOCKER_DATA_FOLDER}/mysql57:/var/lib/mysql:delegated
    networks:
      - mynetwork

  mailhog:
    image: mailhog/mailhog
    container_name: ${APPLICATION}_mailhog
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - mynetwork

  redis:
    image: redis:4.0
    container_name: ${APPLICATION}_redis
    ports:
      - 6379:6379
    networks:
      - mynetwork

  redismin:
    image: redsmin/proxy
    container_name: ${APPLICATION}_redismin
    environment:
      REDSMIN_KEY: ${REDISMIN_KEY}
      REDIS_URI: redis://redis:6379
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge
